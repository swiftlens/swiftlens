name: Test

on:
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-14]
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install Xcode (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcrun --find sourcekit-lsp || echo "SourceKit-LSP not found"

    - name: Check architecture
      run: |
        echo "Architecture: $(uname -m)"
        echo "macOS version: $(sw_vers -productVersion)"
        python --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # For CI, install without swiftlens-core since it's only available for ARM64
        # First, create a temporary requirements file without swiftlens-core
        cat pyproject.toml | python -c "import sys, tomllib; data = tomllib.loads(sys.stdin.read()); deps = [d for d in data['project']['dependencies'] if not d.startswith('swiftlens-core')]; [print(d) for d in deps]" > temp_requirements.txt
        pip install -r temp_requirements.txt
        pip install -e .[dev]

    - name: Check formatting
      run: |
        ./format.sh check

    - name: Run linting
      run: |
        make lint

    - name: Run tests
      run: |
        # Run full test suite on macOS (includes LSP tests)
        make test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .pytest_cache/
          test-results/