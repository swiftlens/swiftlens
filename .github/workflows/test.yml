name: Test

on:
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Skip some macOS combinations to save CI time
          - os: macos-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.11"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install Xcode (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcrun --find sourcekit-lsp || echo "SourceKit-LSP not found"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Check formatting
      run: |
        ./format.sh check

    - name: Run linting
      run: |
        make lint

    - name: Run tests
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          # Run unit tests only on Ubuntu (no LSP)
          make test-unit
        else
          # Run full test suite on macOS (includes LSP tests)
          make test
        fi

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .pytest_cache/
          test-results/